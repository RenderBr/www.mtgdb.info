@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<MtgDb.Info.PlaneswalkerModel>
@using System.Collections.Generic;
@using System.Linq;
@using  MtgDb.Info;

@{
  Layout = "_Layout.cshtml";
}

@section Top
{
  	@{
  	string Possessive = (Model.Planeswalker.Profile.Name.EndsWith("s") ? "'" : "'s");
  	string PossessiveName = string.Format("{0}{1}",@Model.Planeswalker.Profile.Name,@Possessive);
  	}
	<h4>@PossessiveName Library</h4>
	<span>Unique cards in collection: <strong id="unique">@Model.TotalCards</strong>, Total Cards in collection: <strong id="total">@Model.TotalAmount</strong></span>
}
<input type="hidden" id="active_set" value="@Model.SetId" />
<input type="hidden" id="active_block" value="@Model.Block.Replace(" ",string.Empty)" />
<ul class="nav nav-tabs heading-tabs">
@foreach(KeyValuePair<string, int> key in Model.Blocks)
{
    string blockId = key.Key.Replace(" ",string.Empty);
    <li class="@(key.Key == Model.Block ? "active" : "")">
        <a href="/pw/@Model.Planeswalker.UserName/blocks/@key.Key/cards/">
            @key.Key
            <span id="@blockId" class="badge">@key.Value</span>
        </a>
    </li>
}
</ul>
<div class="panel panel-default tab-panel">
    <div class="panel-heading">

    </div><!--/.panel-heading-->
	<div class="panel-body">
		<ul class="nav nav-tabs heading-tabs">
		@foreach(CardSet set in Model.Sets.OrderBy(n => n.ReleasedAt))
		{
	        string imgUrl = string.Format("https://api.mtgdb.info/content/set_images/symbols/{0}_sym.png",set.Id.ToLower());
  			<li class="set-tab @(set.Id == Model.SetId ? "active" : "")">
            	<a href="/pw/@Model.Planeswalker.UserName/blocks/@set.Block/cards/@set.Id/" data-toggle="tooltip" data-placement="top" title="@set.Name">
                	<img src="@imgUrl"/>
            	</a>
        	</li>
		}
		</ul><!--/.nav-tabs-->
		<div class="panel panel-default tab-panel">
			<div class="panel-heading">
				<div class="row">
					<div class="col-md-12">
						<div class="pull-right">
							<span>Show Cards: </span>
							<div class="btn-group">
							  <a href="?" type="button" class="btn btn-default @(Model.Show ? "":"active")">Owned</a>
							  <a href="?show=true" type="button" class="btn btn-default @(Model.Show ? "active":"")">Full Set</a>
							</div>
						</div>	
					</div>
				</div>
    		</div><!--/.panel-heading-->
			<div class="panel-body">
			@foreach(var cardInfo in Model.Cards)
	        {
	            string id = string.Format("card_{0}", cardInfo.Card.Id);
	            string valueId = string.Format("value_{0}", cardInfo.Card.Id);
	            string blockId = Model.Block.Replace(" ", string.Empty);
	            string description = @cardInfo.Card.Description.Replace("\"","'");
	            string name = @cardInfo.Card.Name.Replace("\"","'");
	            string color = (cardInfo.Amount > 0 ? "" : "dont-own");

	            <!--input type="hidden" id="@cardInfo.Card.Id" value="@cardInfo.Amount" /-->
		    	string popoverContent = string.Format("<strong>{0}</strong> - {1} ({2})<br/><em>{3} - {4}</em><br/>{5} - {6}",@cardInfo.Card.Name,@cardInfo.Card.ManaCost,@cardInfo.Card.ConvertedManaCost,@cardInfo.Card.Type,@cardInfo.Card.SubType,@cardInfo.Card.CardSetName,@cardInfo.Card.Rarity);
		       	<div id="@id" class="my-card" data-container="body" data-toggle="popover" data-placement="auto top" data-content="@popoverContent">
		        	<a href="~/cards/@cardInfo.Card.Id">
		            	<img id="img_@cardInfo.Card.Id" class="@color" src="@cardInfo.Card.CardImage" />
		        	</a>
		        	<div class="card-amount">
		    			<div class="input-group">
		      				<span class="input-group-btn">
		        				<a class="btn btn-danger" type="button" onclick="minusCard(@cardInfo.Card.Id);"><i class="fa fa-minus"></i></a>
		      				</span>
		      				<input type="text" class="form-control" id="@cardInfo.Card.Id" type="text" onkeyup="changeAmount(@cardInfo.Card.Id);" placeholder="0" value="@cardInfo.Amount"/>
		      				<span class="input-group-btn">
		        				<a class="btn btn-success" type="button" onclick="addCard(@cardInfo.Card.Id);"><i class="fa fa-plus"></i></a>
		      				</span>
		    			</div><!-- /input-group -->
					</div><!--/.card-amount-->
		    	</div><!--/.my-card -->
	        }
			</div><!--/.panel-body-->
		</div><!--/.tab-panel-->
	</div><!--/.panel-body-->
	<div class="panel-footer">

	</div>
</div>
<!--
<div class="tab-container" id="outer-container">
    <ul class='etabs'>
        @foreach(KeyValuePair<string, int> k in Model.Blocks)
        {
            string c = k.Key == Model.Block ? "active" : "";
            string blockId = k.Key.Replace(" ",string.Empty);

            <li class='tab @c'>
                <a href="/pw/@Model.Planeswalker.UserName/blocks/@k.Key/cards/">
                    @k.Key
                    <span id="@blockId" class="badge">@k.Value</span>
                </a>
            </li>
        }
    </ul>
     <div class="panel-container">
        <div id="nested-tab-1">
            <div class="tab-container" id="outer-container">
    <ul class='etabs'>
    @foreach(CardSet set in Model.Sets)
    {
        string c = set.Id == Model.SetId ? "active" : "";
        string show = Model.Show && set.Id == Model.SetId ? "" : 
        !Model.Show && set.Id == Model.SetId ? "?show=true" : "";

        string style = Model.Show && set.Id == Model.SetId ? "style='background-color:#E5FAE3;'" : "";

        string imgUrl = string.Format("https://api.mtgdb.info/content/set_images/symbols/{0}_sym.png",set.Id.ToLower());
        <li class='tab @c' @style >
            <a href="/pw/@Model.Planeswalker.UserName/blocks/@set.Block/cards/@set.Id/@show">
                <img src="@imgUrl" /> @set.Name
                <span id="@set.Id" class="badge">@Model.Counts[set.Id]</span>/<span class="badge">@set.Total</span>
            </a>
        </li>
    }
    </ul>
    <div class="panel-container">
        <div id="nested-tab-1">
        @foreach(var cardInfo in Model.Cards)
        {
            string id = string.Format("card_{0}", cardInfo.Card.Id);
            string valueId = string.Format("value_{0}", cardInfo.Card.Id);
            string blockId = Model.Block.Replace(" ", string.Empty);
            string description = @cardInfo.Card.Description.Replace("\"","'");
            string name = @cardInfo.Card.Name.Replace("\"","'");

            <input type="hidden" id="@cardInfo.Card.Id" value="@cardInfo.Amount" />
            <div class="popit" id="@id" title="<b>@name</b> #@cardInfo.Card.SetNumber <br />You have: <span id='@valueId' class='badge'><script>$('#@valueId').html($('#@cardInfo.Card.Id').val());</script></span>" data-container="#@id" 
            data-content=
             "@description <br /><span class='label label-primary'>@cardInfo.Card.Power &#47; @cardInfo.Card.Toughness</span><br /><br /><button type='button' class='btn btn-danger btn-xs' onclick='minusCard(@cardInfo.Card.Id);'>-</button><button type='button' class='btn btn-success btn-xs' onclick='addCard(@cardInfo.Card.Id);'>+</button>" 
             style="float:left;">
                
                <a  rel="popover" href="~/cards/@cardInfo.Card.Id" class="thumbnail">
                    @if(cardInfo.Amount > 0)
                    {
                        <img id="img_@cardInfo.Card.Id" src="@cardInfo.Card.CardImage" style="width:111px;height:155px;" />
                    }
                    else
                    {
                        <img id="img_@cardInfo.Card.Id" src="@cardInfo.Card.CardImage" class="dont-own" 
                                            style="width:111px;height:155px;" />
                    }
                </a>
           
            </div>
        }
        </div>
    <br style="clear:both;" />
    </div>
</div> 
        </div>
     </div>
</div>
<br style="clear:both;" />-->