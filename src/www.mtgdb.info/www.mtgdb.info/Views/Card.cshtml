@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<MtgDb.Info.CardModel>
@{
  Layout = "_Layout.cshtml";
}
@section Top{
    <div class="t_section">
    <h4>@Html.Raw(RenderHtml.Name(@Model.Card.Name))</h4>
    @if(Model.Card.Flavor != null && Model.Card.Flavor != "")
    {
      <blockquote><em>@Model.Card.Flavor</em></blockquote>
    }
    </div>
}
@{
    int SetCount = Model.Set.Total; //Needs to be actual count 
}
<div class="row card-header-nav">
    <div class="col-md-4">
    	@if(Model.PrevCard != null)
    	{
    		<a class="btn btn-default btn-sm btn-block block-left" href="~/cards/@Model.PrevCard.Id">
    			<i class="fa fa-chevron-left"></i> Prev Card: @Model.PrevCard.Name
    		</a>
    	}
    </div>
    <div class="col-md-4 center">
    	<a class="btn btn-default btn-sm btn-block" href="~/sets/@Model.Card.CardSetId?Page=@Model.Page"><i class="fa fa-book"></i> @Model.Card.CardSetName</a>
    </div>
    <div class="col-md-4">
    	@if(Model.NextCard != null)
    	{
    		<a class="btn btn-default btn-sm btn-block block-right" href="~/cards/@Model.NextCard.Id">
    			Next Card: @Model.NextCard.Name <i class="fa fa-chevron-right"></i>
    		</a>
    	}
    </div>
</div> 
<div class="row">
	<div class="col-md-4 col-card-info">
		<h4>Card Info</h4>
        <p><strong>Multiverse Id:</strong> @Model.Card.Id</p>
    	@if(@Model.Card.RelatedCardId > 0)
    	{
    	<p><strong>Related Card:</strong> <a href="/cards/@Model.Card.RelatedCardId">@Model.Card.RelatedCardId</a></p>
    	}
        <p><strong>Card Number:</strong> @Model.Card.SetNumber / @SetCount</p>
	    <p><strong>Released:</strong> @Model.Card.ReleasedAt.ToString("dd MMM yyyy")</p>
	    <p><strong><span>Color</span>@(Model.Card.Colors.Length > 1 ? "s" : ""):</strong>
	    	@{
	    		int idx = 0;
	    		foreach(string color in @Model.Card.Colors){
	        		@Html.Raw(RenderHtml.Color(color))
	    		}
				
			}
        </p>
        <p><strong>Mana Cost:</strong> <span class="mana-cost">@Html.Raw(RenderHtml.Mana(Model.Card.ManaCost))</span></p>
        <p><strong>Converted Cost:</strong> @Model.Card.ConvertedManaCost</p>
        <p><strong>Type:</strong> @Model.Card.Type @(@Model.Card.SubType != null ? "-" : "") @(Model.Card.SubType)</p>
        <p><strong>Rarity:</strong> @Model.Card.Rarity</p>
        <p><strong>Text:</strong> @Html.Raw(RenderHtml.Text(@Model.Card.Description))</p>
        @if(Model.Card.Type.ToLower().Contains("creature")){
        <p><strong>Power & Toughness:</strong> @Model.Card.Power / @Model.Card.Toughness </p>
        }
        <p><strong>Artist:</strong> @Model.Card.Artist</p>
	</div>
	<div class="col-md-4 center">
		<div id="card-@Model.Card.Id" class="card single-card">
	        @{
	            string hiRes = string.Format("https://api.mtgdb.info/content/hi_res_card_images/{0}.jpg", @Model.Card.Id);
	            <a href="@hiRes"><img class="border border-@Model.Card.CardSetId" src="@hiRes"/></a>
	        }

	        @if(@Model.Planeswalker != null)
	        {
	            <div class="card-amount">
	    			<div class="input-group">
	      				<span class="input-group-btn">
	        				<button class="btn btn-danger" type="button" onclick="minusCard(@Model.Card.Id);"><i class="fa fa-minus"></i></button>
	      				</span>
	      				<input type="text" class="form-control" id="@Model.Card.Id" type="text" onkeyup="changeAmount(@Model.Card.Id);"
		            placeholder="0" value="@Model.Amount">
	      				<span class="input-group-btn">
	        				<button class="btn btn-success" type="button" onclick="addCard(@Model.Card.Id);"><i class="fa fa-plus"></i></button>
	      				</span>
	    			</div><!-- /input-group -->
		        </div>
	        }
	    </div>
	</div>
	<div class="col-md-4">
		<h4>Prints (@Model.Prints.Length)</h4>
		<select class="form-control" onchange="if (this.value) window.location.href=this.value">
        @if(@Model.Prints != null && @Model.Prints.Length > 0){
            foreach(Card card in @Model.Prints){
            	if(@Model.Card.CardSetName != @card.CardSetName){
                	<option value="~/cards/@card.Id">@card.CardSetName</option>
                }
               else{
               		<option value="~/cards/@card.Id" selected>@card.CardSetName</option>
               }
            }
        }
		</select>
		<h4>Format Legality</h4>
		@if(Model.Card.Formats != null && Model.Card.Formats.Length > 0){
	    	foreach(var format in Model.Card.Formats){
	    		string labelType = "success";
	    		if(@format.Legality == "Banned"){
	    			labelType = "danger";
	    		}
	    		else if(@format.Legality == "Restricted"){
	    			labelType = "warning";
	    		}
	            <span class="label label-@labelType label-legality" data-toggle="tooltip" data-placement="top" title="@format.Legality">@format.Name</span>
	        }
	    }
	    else{
	    	<em>This card has no format data.</em>
	    }
	</div>
</div>
<div class="rulings-wrap">
    <h4>Rulings</h4>
    @if(Model.Card.Rulings != null && Model.Card.Rulings.Length > 0)
    {
    	<ul class="rulings">
        @foreach(var rule in Model.Card.Rulings)
        {
        	<li><span class="ruling-date">@rule.ReleasedAt.ToString("MMM yyyy")</span> - <span class="ruling-text"> @Html.Raw(RenderHtml.Text(@rule.Rule))</span></li>
        }
       	</ul>
    }
    else
    {
        <em class="no-rulings">This card has no rulings.</em>
    }
</div>
 <div>
 <a class="btn btn-default btn-info" href="/cards/@Model.Card.Id/change" role="button"><i class="fa fa-comment"></i> Change Request</a>
 <a class="btn btn-default" href="/cards/@Model.Card.Id/logs" role="button"><i class="fa fa-comments-o"></i> Change Logs</a>
 </div>

